{"version":3,"file":"plugins/plugin.url.js","mappings":"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","sources":["webpack://@internetarchive/bookreader/./src/plugins/url/UrlPlugin.js","webpack://@internetarchive/bookreader/./src/plugins/url/plugin.url.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.object.entries.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.object.from-entries.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.string.match.js"],"sourcesContent":["export class UrlPlugin {\n  constructor(options = {}) {\n    this.bookReaderOptions = options;\n\n    // the canonical order of elements is important in the path and query string\n    this.urlSchema = [\n      { name: 'page', position: 'path', default: 'n0' },\n      { name: 'mode', position: 'path', default: '2up' },\n      { name: 'search', position: 'path', deprecated_for: 'q' },\n      { name: 'q', position: 'query_param' },\n      { name: 'sort', position: 'query_param' },\n      { name: 'view', position: 'query_param' },\n      { name: 'admin', position: 'query_param' },\n    ];\n\n    this.urlState = {};\n    this.urlMode = this.bookReaderOptions.urlMode || 'hash';\n    this.urlHistoryBasePath = this.bookReaderOptions.urlHistoryBasePath ||  '/';\n    this.urlLocationPollId = null;\n    this.oldLocationHash = null;\n    this.oldUserHash = null;\n  }\n\n  /**\n   * Parse JSON object URL state to string format\n   * Arrange path names in an order that it is positioned on the urlSchema\n   * @param {Object} urlState\n   * @returns {string}\n   */\n  urlStateToUrlString(urlState) {\n    const searchParams = new URLSearchParams();\n    const pathParams = {};\n\n    Object.keys(urlState).forEach(key => {\n      let schema = this.urlSchema.find(schema => schema.name === key);\n      if (schema?.deprecated_for) {\n        schema = this.urlSchema.find(schemaKey => schemaKey.name === schema.deprecated_for);\n      }\n      if (schema?.position == 'path') {\n        pathParams[schema?.name] = urlState[key];\n      } else {\n        searchParams.append(schema?.name || key, urlState[key]);\n      }\n    });\n\n    const strPathParams = this.urlSchema\n      .filter(s => s.position == 'path')\n      .map(schema => pathParams[schema.name] ? `${schema.name}/${pathParams[schema.name]}` : '')\n      .join('/');\n\n    const strStrippedTrailingSlash = `${strPathParams.replace(/\\/$/, '')}`;\n    const concatenatedPath = `${strStrippedTrailingSlash}?${searchParams.toString()}`;\n    return searchParams.toString() ? concatenatedPath : `${strStrippedTrailingSlash}`;\n  }\n\n  /**\n   * Parse string URL and add it in the current urlState\n   * Example:\n   *  /page/n7/mode/2up => {page: 'n7', mode: '2up'}\n   *  /page/n7/mode/2up/search/hello => {page: 'n7', mode: '2up', q: 'hello'}\n   * @param {string} urlString\n   * @returns {object}\n   */\n  urlStringToUrlState(urlString) {\n    const urlState = {};\n\n    // Fetch searchParams from given {str}\n    // Note: whole URL path is needed for URL parsing\n    const urlPath = new URL(urlString, 'http://example.com');\n    const urlSearchParamsObj = Object.fromEntries(urlPath.searchParams.entries());\n    const splitUrlMatches = urlPath.pathname.match(/[^\\\\/]+\\/[^\\\\/]+/g);\n    const urlStrSplitSlashObj = splitUrlMatches ? Object.fromEntries(splitUrlMatches.map(x => x.split('/'))) : {};\n\n    const doesKeyExists = (_object, _key) => {\n      return Object.keys(_object).some(value => value == _key);\n    };\n\n    // Add path objects to urlState\n    this.urlSchema\n      .filter(schema => schema.position == 'path')\n      .forEach(schema => {\n        if (!urlStrSplitSlashObj[schema.name] && schema.default) {\n          return urlState[schema.name] = schema.default;\n        }\n        const hasPropertyKey = doesKeyExists(urlStrSplitSlashObj, schema.name);\n        const hasDeprecatedKey = doesKeyExists(schema, 'deprecated_for') && hasPropertyKey;\n\n        if (hasDeprecatedKey) {\n          urlState[schema.deprecated_for] = urlStrSplitSlashObj[schema.name];\n          return;\n        }\n\n        if (hasPropertyKey) {\n          urlState[schema.name] = urlStrSplitSlashObj[schema.name];\n          return;\n        }\n      });\n\n    // Add searchParams to urlState\n    Object.entries(urlSearchParamsObj).forEach(([key, value]) => {\n      urlState[key] = value;\n    });\n\n    return urlState;\n  }\n\n  /**\n   * Add or update key-value to the urlState\n   * @param {string} key\n   * @param {string} val\n   */\n  setUrlParam(key, value) {\n    this.urlState[key] = value;\n\n    this.pushToAddressBar();\n  }\n\n  /**\n   * Delete key-value to the urlState\n   * @param {string} key\n   */\n  removeUrlParam(key) {\n    delete this.urlState[key];\n\n    this.pushToAddressBar();\n  }\n\n  /**\n   * Get key-value from the urlState\n   * @param {string} key\n   * @return {string}\n   */\n  getUrlParam(key) {\n    return this.urlState[key];\n  }\n\n  /**\n   * Push URL params to addressbar\n   */\n  pushToAddressBar() {\n    const urlStrPath = this.urlStateToUrlString(this.urlState);\n    if (this.urlMode == 'history') {\n      if (window.history && window.history.replaceState) {\n        const newUrlPath = `${this.urlHistoryBasePath}${urlStrPath}`;\n        window.history.replaceState({}, null, newUrlPath);\n      }\n    } else {\n      window.location.replace('#' + urlStrPath);\n    }\n    this.oldLocationHash = urlStrPath;\n  }\n\n  /**\n   * Get the url and check if it has changed\n   * If it was changeed, update the urlState\n   */\n  listenForHashChanges() {\n    this.oldLocationHash = window.location.hash.substr(1);\n    if (this.urlLocationPollId) {\n      clearInterval(this.urlLocationPollId);\n      this.urlLocationPollId = null;\n    }\n\n    // check if the URL changes\n    const updateHash = () => {\n      const newFragment = window.location.hash.substr(1);\n      const hasFragmentChange = newFragment != this.oldLocationHash;\n\n      if (!hasFragmentChange) { return; }\n\n      this.urlState = this.urlStringToUrlState(newFragment);\n    };\n    this.urlLocationPollId = setInterval(updateHash, 500);\n  }\n\n  /**\n   * Will read either the hash or URL and return the bookreader fragment\n   */\n  pullFromAddressBar (location = window.location) {\n    const path = this.urlMode === 'history'\n      ? (location.pathname.substr(this.urlHistoryBasePath.length) + location.search)\n      : location.hash.substr(1);\n    this.urlState = this.urlStringToUrlState(path);\n  }\n}\n","/* global BookReader */\n\nimport { UrlPlugin } from \"./UrlPlugin\";\n\n/**\n * Plugin for URL management in BookReader\n * Note read more about the url \"fragment\" here:\n * https://openlibrary.org/dev/docs/bookurls\n */\n\njQuery.extend(BookReader.defaultOptions, {\n  enableUrlPlugin: true,\n  bookId: '',\n  /** @type {string} Defaults can be a urlFragment string */\n  defaults: null,\n  updateWindowTitle: false,\n\n  /** @type {'history' | 'hash'} */\n  urlMode: 'hash',\n\n  /**\n   * When using 'history' mode, this part of the URL is kept constant\n   * @example /details/plato/\n   */\n  urlHistoryBasePath: '/',\n\n  /** Only these params will be reflected onto the URL */\n  urlTrackedParams: ['page', 'search', 'mode', 'region', 'highlight', 'view'],\n\n  /** If true, don't update the URL when `page == n0 (eg \"/page/n0\")` */\n  urlTrackIndex0: false,\n});\n\n/** @override */\nBookReader.prototype.setup = (function(super_) {\n  return function(options) {\n    super_.call(this, options);\n\n    this.bookId = options.bookId;\n    this.defaults = options.defaults;\n\n    this.locationPollId = null;\n    this.oldLocationHash = null;\n    this.oldUserHash = null;\n  };\n})(BookReader.prototype.setup);\n\n/** @override */\nBookReader.prototype.init = (function(super_) {\n  return function() {\n\n    if (this.options.enableUrlPlugin) {\n      this.bind(BookReader.eventNames.PostInit, () => {\n        const { updateWindowTitle, urlMode } = this.options;\n        if (updateWindowTitle) {\n          document.title = this.shortTitle(this.bookTitle, 50);\n        }\n        if (urlMode === 'hash') {\n          this.urlStartLocationPolling();\n        }\n      });\n\n      this.bind(BookReader.eventNames.fragmentChange,\n        this.urlUpdateFragment.bind(this)\n      );\n    }\n    super_.call(this);\n  };\n})(BookReader.prototype.init);\n\n/**\n * Returns a shortened version of the title with the maximum number of characters\n * @param {number} maximumCharacters\n * @return {string}\n */\nBookReader.prototype.shortTitle = function(maximumCharacters) {\n  if (this.bookTitle.length < maximumCharacters) {\n    return this.bookTitle;\n  }\n\n  const title = `${this.bookTitle.substr(0, maximumCharacters - 3)}...`;\n  return title;\n};\n\n/**\n * Starts polling of window.location to see hash fragment changes\n */\nBookReader.prototype.urlStartLocationPolling = function() {\n  this.oldLocationHash = this.urlReadFragment();\n\n  if (this.locationPollId) {\n    clearInterval(this.locationPollId);\n    this.locationPollId = null;\n  }\n\n  const updateHash = () => {\n    const newFragment = this.urlReadFragment();\n    const hasFragmentChange = (newFragment != this.oldLocationHash) && (newFragment != this.oldUserHash);\n\n    if (!hasFragmentChange) { return; }\n\n    const params = this.paramsFromFragment(newFragment);\n\n    const updateParams = () => this.updateFromParams(params);\n\n    this.trigger(BookReader.eventNames.stop);\n    if (this.animating) {\n      // Queue change if animating\n      if (this.autoStop) this.autoStop();\n      this.animationFinishedCallback = updateParams;\n    } else {\n      // update immediately\n      updateParams();\n    }\n    this.oldUserHash = newFragment;\n  };\n\n  this.locationPollId = setInterval(updateHash, 500);\n};\n\n/**\n * Update URL from the current parameters.\n * Call this instead of manually using window.location.replace\n */\nBookReader.prototype.urlUpdateFragment = function() {\n  const allParams = this.paramsFromCurrent();\n  const { urlMode, urlTrackIndex0, urlTrackedParams } = this.options;\n\n  if (!urlTrackIndex0\n      && (typeof(allParams.index) !== 'undefined')\n      && allParams.index === 0) {\n    delete allParams.index;\n    delete allParams.page;\n  }\n\n  const params = urlTrackedParams.reduce((validParams, paramName) => {\n    if (paramName in allParams) {\n      validParams[paramName] = allParams[paramName];\n    }\n    return validParams;\n  }, {});\n\n  const newFragment = this.fragmentFromParams(params, urlMode);\n  const currFragment = this.urlReadFragment();\n  const currQueryString = this.getLocationSearch();\n  const newQueryString = this.queryStringFromParams(params, currQueryString, urlMode);\n  if (currFragment === newFragment && currQueryString === newQueryString) {\n    return;\n  }\n\n  if (urlMode === 'history') {\n    if (window.history && window.history.replaceState) {\n      const baseWithoutSlash = this.options.urlHistoryBasePath.replace(/\\/+$/, '');\n      const newFragmentWithSlash = newFragment === '' ? '' : `/${newFragment}`;\n\n      const newUrlPath = `${baseWithoutSlash}${newFragmentWithSlash}${newQueryString}`;\n      window.history.replaceState({}, null, newUrlPath);\n      this.oldLocationHash = newFragment + newQueryString;\n\n    }\n  } else {\n    const newQueryStringSearch = this.urlParamsFiltersOnlySearch(this.readQueryString());\n    window.location.replace('#' + newFragment + newQueryStringSearch);\n    this.oldLocationHash = newFragment + newQueryStringSearch;\n\n  }\n};\n\n/**\n * @private\n * Filtering query parameters to select only book search param (?q=foo)\n   This needs to be updated/URL system modified if future query params are to be added\n * @param {string} url\n * @return {string}\n * */\nBookReader.prototype.urlParamsFiltersOnlySearch = function(url) {\n  const params = new URLSearchParams(url);\n  return params.has('q') ? `?${new URLSearchParams({ q: params.get('q') })}` : '';\n};\n\n\n/**\n * Will read either the hash or URL and return the bookreader fragment\n * @return {string}\n */\nBookReader.prototype.urlReadFragment = function() {\n  const { urlMode, urlHistoryBasePath } = this.options;\n  if (urlMode === 'history') {\n    return window.location.pathname.substr(urlHistoryBasePath.length);\n  } else {\n    return window.location.hash.substr(1);\n  }\n};\n\n/**\n * Will read the hash return the bookreader fragment\n * @return {string}\n */\nBookReader.prototype.urlReadHashFragment = function() {\n  return window.location.hash.substr(1);\n};\nexport class BookreaderUrlPlugin extends BookReader {\n  init() {\n    if (this.options.enableUrlPlugin) {\n      this.urlPlugin = new UrlPlugin(this.options);\n      this.bind(BookReader.eventNames.PostInit, () => {\n        const { urlMode } = this.options;\n\n        if (urlMode === 'hash') {\n          this.urlPlugin.listenForHashChanges();\n        }\n      });\n    }\n\n    super.init();\n  }\n}\n\nwindow.BookReader = BookreaderUrlPlugin;\nexport default BookreaderUrlPlugin;\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar createProperty = require('../internals/create-property');\n\n// `Object.fromEntries` method\n// https://github.com/tc39/proposal-object-from-entries\n$({ target: 'Object', stat: true }, {\n  fromEntries: function fromEntries(iterable) {\n    var obj = {};\n    iterate(iterable, function (k, v) {\n      createProperty(obj, k, v);\n    }, { AS_ENTRIES: true });\n    return obj;\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeMatch, rx, S);\n\n      if (res.done) return res.value;\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = toString(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n"],"names":["super_","UrlPlugin","options","this","bookReaderOptions","urlSchema","name","position","default","deprecated_for","urlState","urlMode","urlHistoryBasePath","urlLocationPollId","oldLocationHash","oldUserHash","searchParams","URLSearchParams","pathParams","Object","keys","forEach","key","schema","find","schemaKey","append","strPathParams","filter","s","map","join","strStrippedTrailingSlash","replace","concatenatedPath","toString","urlString","urlPath","URL","urlSearchParamsObj","fromEntries","entries","splitUrlMatches","pathname","match","urlStrSplitSlashObj","x","split","doesKeyExists","_object","_key","some","value","hasPropertyKey","pushToAddressBar","urlStrPath","urlStateToUrlString","window","history","replaceState","newUrlPath","location","hash","substr","clearInterval","setInterval","newFragment","urlStringToUrlState","path","length","search","extend","BookReader","defaultOptions","enableUrlPlugin","bookId","defaults","updateWindowTitle","urlTrackedParams","urlTrackIndex0","prototype","setup","call","locationPollId","init","bind","eventNames","PostInit","document","title","shortTitle","bookTitle","urlStartLocationPolling","fragmentChange","urlUpdateFragment","maximumCharacters","urlReadFragment","params","paramsFromFragment","updateParams","updateFromParams","trigger","stop","animating","autoStop","animationFinishedCallback","allParams","paramsFromCurrent","index","page","reduce","validParams","paramName","fragmentFromParams","currFragment","currQueryString","getLocationSearch","newQueryString","queryStringFromParams","baseWithoutSlash","newFragmentWithSlash","newQueryStringSearch","urlParamsFiltersOnlySearch","readQueryString","url","has","q","get","urlReadHashFragment","BookreaderUrlPlugin","urlPlugin","listenForHashChanges","$","$entries","target","stat","O","iterate","createProperty","iterable","obj","k","v","AS_ENTRIES","fixRegExpWellKnownSymbolLogic","anObject","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","MATCH","nativeMatch","maybeCallNative","regexp","matcher","undefined","RegExp","string","rx","S","res","done","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr"],"sourceRoot":""}